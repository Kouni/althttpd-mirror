name: Sync Althttpd Source

on:
  schedule:
    # Run daily at 00:00 UTC
    - cron: '0 0 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Download and sync althttpd files
      run: |
        # Create directories
        mkdir -p docs

        # Function to download file from SQLite repository
        download_file() {
          local path=$1
          local filename=$2
          local output=$3

          echo "Downloading $filename..."
          curl -L -o "$output" "https://sqlite.org/althttpd/raw/${path}?at=trunk" || {
            echo "Failed to download $filename"
            return 1
          }
        }

        # Download main files
        download_file "althttpd.c" "althttpd.c" "althttpd.c"
        download_file "Makefile" "Makefile" "Makefile"
        download_file "VERSION.h" "VERSION.h" "VERSION.h"

        # Download documentation files
        download_file "althttpd.md" "althttpd.md" "docs/althttpd.md"
        download_file "standalone-mode.md" "standalone-mode.md" "docs/standalone-mode.md"
        download_file "static-build.md" "static-build.md" "docs/static-build.md"
        download_file "linode-systemd.md" "linode-systemd.md" "docs/linode-systemd.md"
        download_file "xinetd.md" "xinetd.md" "docs/xinetd.md"
        download_file "openrc.md" "openrc.md" "docs/openrc.md"
        download_file "stunnel4.md" "stunnel4.md" "docs/stunnel4.md"

        # Create NOTICE file for attribution
        cat > NOTICE << 'NOTICE_EOF'
        This is a mirror of the althttpd web server from the SQLite project.

        Original source: https://sqlite.org/althttpd/

        The althttpd source code is in the public domain, with the following notice:

        The author disclaims copyright to this source code. In place of
        a legal notice, here is a blessing:

        May you do good and not evil.
        May you find forgiveness for yourself and forgive others.
        May you share freely, never taking more than you give.
        NOTICE_EOF

    - name: Check for changes
      id: changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        # Add all files
        git add -A

        # Check if there are changes
        if git diff --staged --quiet; then
          echo "No changes detected"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT

          # Get current timestamp
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        TIMESTAMP="${{ steps.changes.outputs.timestamp }}"

        # Create commit message
        git commit -m "Sync althttpd source from upstream - $TIMESTAMP" \
                   -m "Automated sync from https://sqlite.org/althttpd/"

        # Push changes
        git push origin main

    - name: Create sync status file
      run: |
        TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
        cat > LAST_SYNC.txt << EOF_SYNC
        Last sync attempt: $TIMESTAMP
        Status: ${{ steps.changes.outputs.has_changes == 'true' && 'Updated' || 'No changes' }}
        Source: https://sqlite.org/althttpd/
        EOF_SYNC

        git add LAST_SYNC.txt
        git diff --staged --quiet || {
          git commit -m "Update sync status"
          git push origin main
        }
